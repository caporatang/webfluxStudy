plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.9'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'dev.miku:r2dbc-mysql:0.8.2.RELEASE'
    implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb-reactive")

    // implementation("io.asyncer:r2dbc-mysql:0.9.2")

    implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"
    implementation 'org.mariadb:r2dbc-mariadb:1.2.1'
    testImplementation 'org.mariadb:r2dbc-mariadb:1.2.1'

    implementation("org.springframework.boot:spring-boot-starter-webflux")

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
    implementation 'org.springframework.security:spring-security-core:6.0.2'

    implementation("org.springframework.boot:spring-boot-starter-data-redis-reactive")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    if (System.getProperty("os.arch") == "aarch64" && System.getProperty("os.name") == "Mac OS X") {
        runtimeOnly("io.netty:netty-resolver-dns-native-macos:_:osx-aarch_64")
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
